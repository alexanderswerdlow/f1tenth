<?xml version="1.0"?>
<!--
This launches the core nodes of the navigation project.
Note, that you still need additional nodes for mapping and localization.
To use any obstacle avoidance, you further need a node that publishes a
pointcloud that is used for obstacle detection.
-->
<launch>
    <arg name="use_laser_obstacles" default="false" />

    <arg name="use_planner_cost" default="false" />
    <arg name="use_planner_dynamic" default="false" />
    <arg name="use_planner_static" default="false" />
    <arg name="use_planner_goal" default="false" />
    <arg name="use_planner_default" default="true" />

    <arg name="use_karto" default="false" />
    <arg name="use_karto_segmented" default="false" />
    <arg name="use_amcl" default="false" />
    <arg name="use_hector" default="false" />

    <!-- obstacle cloud (simply converting laser scans to cloud) -->
    <node name="obstacle_cloud" type="scan2cloud_node" pkg="scan2cloud"
          output="screen" if="$(arg use_laser_obstacles)">
        <remap from="/scan/front/filtered" to="/scan_filtered" />
        <remap from="cloud/total" to="/obstacle_cloud" />
    </node>

    <include file="$(find navigation_launch)/launch/mapping.launch">
        <arg name="use_karto" value="$(arg use_karto)" />
        <arg name="use_karto_segmented" value="$(arg use_karto_segmented)" />
        <arg name="use_amcl" value="$(arg use_amcl)" />
        <arg name="use_hector" value="$(arg use_hector)" />
    </include>

    <include file="$(find path_planner)/launch/path_planner.launch">
        <arg name="use_planner_cost" value="$(arg use_planner_cost)" />
        <arg name="use_planner_dynamic" value="$(arg use_planner_dynamic)" />
        <arg name="use_planner_static" value="$(arg use_planner_static)" />
        <arg name="use_planner_goal" value="$(arg use_planner_goal)" />
        <arg name="use_planner_default" value="$(arg use_planner_default)" />
    </include>

    <include file="$(find path_control)/launch/path_control.launch" />

    <include file="$(find path_follower)/launch/follower.launch" />

</launch>
